DROP TABLE IF EXISTS sites;
CREATE TABLE sites
(site_id INTEGER PRIMARY KEY AUTO_INCREMENT,
site_name text NOT NULL,
normalized_name text NOT NULL,
num_nodes int NOT NULL,
last_update TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP);

DROP TABLE IF EXISTS processing_state;
CREATE TABLE processing_state
(site_id int NOT NULL PRIMARY KEY,
last_update TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
state ENUM ('WAITING','COMPLETE','ERRONEOUS','PARSED')  NOT NULL);

DROP TABLE IF EXISTS nodes;
CREATE TABLE nodes
(node_id INTEGER PRIMARY KEY AUTO_INCREMENT,
site_id int NOT NULL,
node_name text NOT NULL);

DROP TABLE IF EXISTS jobs;
CREATE TABLE jobs
(data_id INTEGER AUTO_INCREMENT,
job_id int NOT NULL,
site_id int NOT NULL,
last_update TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
job_state ENUM ('STARTED','ERROR', 'STALLED','COMPLETED','KILLED')  NOT NULL,
node_id int,
paramName text,
paramValue text,
PRIMARY KEY(data_id,job_id));

DROP TABLE IF EXISTS parsed_outputs;
CREATE TABLE parsed_outputs
(site_id int NOT NULL,
node_id int NOT NULL,
parsed_result text,
PRIMARY KEY (site_id,node_id));
